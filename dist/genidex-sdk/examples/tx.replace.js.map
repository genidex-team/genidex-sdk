{"version":3,"file":"tx.replace.js","sourceRoot":"","sources":["../../../examples/tx.replace.ts"],"names":[],"mappings":"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","sourcesContent":["\nimport { GeniDex, NetworkName, constants } from \"../src/index\";\nimport { ethers, formatEther, parseEther, Signature, Signer } from \"ethers\";\nimport { config } from \"../test/config\";\n\nlet genidex  = new GeniDex();\nlet signer: Signer;\nlet signerAddress: string;\nconst ETH_ADDRESS = constants.ETH_ADDRESS;\nlet provider = config.provider;\n\nasync function main(){\n    signer = await config.getSigner();\n    signerAddress = await signer.getAddress();\n    await genidex.connect(config.networkName, provider);\n\n    // Check balance\n    const balance1 = await genidex.balances.getBalance(signerAddress, ETH_ADDRESS)\n    console.log('Balance1', formatEther(balance1));\n\n    // stop mine\n    await provider.send(\"evm_setAutomine\", [false]);\n\n    const nonce = await provider.getTransactionCount(signerAddress);\n\n    await sendTx1(nonce);\n    await sendTx2(nonce);\n\n    // await new Promise((r) => setTimeout(r, 15_000));\n    console.log('evm_setAutomine', true)\n    await provider.send(\"evm_setAutomine\", [true]);\n\n\n}\n\nasync function sendTx1(nonce: any){\n    let tx: any;\n    try{\n        tx = await genidex.balances.depositEth({\n            signer,\n            normAmount: parseEther(\"1\"),\n            overrides: {\n                gasPrice: ethers.parseUnits(\"20\", \"gwei\"),\n                nonce\n            }\n        });\n    }catch(error){\n        console.log(error);\n        return;\n    }\n    // wait tx1\n    if(!tx) return;\n    genidex.tx.wait(tx?.hash).then((receipt)=>{\n        console.log('\\n\\n=========== tx1 successful ============\\n\\n')\n        console.log(receipt);\n    })\n    .catch(async (error)=>{\n        console.log('\\n\\n=========== tx1 error ============\\n\\n')\n        console.error(error)\n        if(error.code=='TRANSACTION_REPLACED'){\n            const newTx = await genidex.tx.findTxByNonce(tx.from, tx.nonce);\n            if(!newTx) return;\n            try{\n                const receipt = await genidex.tx.wait(newTx.hash);\n                console.log('\\n\\n=========== tx1 TRANSACTION_REPLACED ============\\n\\n')\n                console.log(receipt);\n            }catch(error2: any){\n                console.log('error2', error2);\n                // if(error2.info){\n                //     console.log(error2.info.payload)\n                // }\n            }\n        }else{\n            console.log(error);\n        }\n    });\n}\n\nasync function sendTx2(nonce: any){\n    let tx: any;\n    try{\n        tx = await genidex.balances.depositEth({\n            signer,\n            normAmount: parseEther(\"1\"),\n            overrides: {\n                gasPrice: ethers.parseUnits(\"30\", \"gwei\"),\n                nonce\n            }\n        });\n    }catch(error){\n        console.log(error);\n        return;\n    }\n    // wait tx2\n    genidex.tx.wait(tx?.hash).then((receipt)=>{\n        console.log('\\n\\n=========== tx2 successful ============\\n\\n')\n        console.log(receipt);\n    })\n    .catch((error)=>{\n        console.log('\\n\\n=========== tx2 error ============\\n\\n')\n        console.log(error);\n    });\n}\n\nmain();"]}
{"version":3,"file":"get.orders.js","sourceRoot":"","sources":["../../../examples/get.orders.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,SAAS,EAAS,MAAM,cAAc,CAAC;AAEtE,OAAO,EAAE,MAAM,EAAE,MAAM,gBAAgB,CAAC;AAGxC,IAAI,OAAO,GAAI,IAAI,OAAO,EAAE,CAAC;AAC7B,IAAI,MAAc,CAAC;AACnB,IAAI,aAAqB,CAAC;AAC1B,MAAM,WAAW,GAAG,SAAS,CAAC,WAAW,CAAC;AAC1C,IAAI,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;AAE/B,KAAK,UAAU,IAAI;IACf,MAAM,GAAG,MAAM,MAAM,CAAC,SAAS,EAAE,CAAC;IAClC,aAAa,GAAG,MAAM,MAAM,CAAC,UAAU,EAAE,CAAC;IAC1C,MAAM,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IAElD,YAAY;IACZ,OAAO,CAAC,IAAI,EAAE,CAAC;IACf,MAAM,SAAS,GAAG,MAAM,OAAO,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;IAC7D,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IACvB,OAAO,CAAC,OAAO,EAAE,CAAA;IAEjB,aAAa;IACb,OAAO,CAAC,IAAI,EAAE,CAAC;IACf,MAAM,UAAU,GAAG,MAAM,OAAO,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;IAChE,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IACxB,OAAO,CAAC,OAAO,EAAE,CAAA;AAGrB,CAAC;AAED,IAAI,EAAE,CAAC","sourcesContent":["\nimport { GeniDex, NetworkName, constants, utils } from \"../src/index\";\nimport { ethers, formatEther, parseEther, Signature, Signer } from \"ethers\";\nimport { config } from \"../test/config\";\nimport { error } from \"console\";\n\nlet genidex  = new GeniDex();\nlet signer: Signer;\nlet signerAddress: string;\nconst ETH_ADDRESS = constants.ETH_ADDRESS;\nlet provider = config.provider;\n\nasync function main(){\n    signer = await config.getSigner();\n    signerAddress = await signer.getAddress();\n    await genidex.connect(NetworkName.Geni, provider);\n\n    // buyOrders\n    console.time();\n    const buyOrders = await genidex.buyOrders.getAllBuyOrders(5);\n    console.log(buyOrders);\n    console.timeEnd()\n\n    // sellOrders\n    console.time();\n    const sellOrders = await genidex.sellOrders.getAllSellOrders(5);\n    console.log(sellOrders);\n    console.timeEnd()\n\n\n}\n\nmain();"]}
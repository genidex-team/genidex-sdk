{"version":3,"file":"tx.wait.revert.js","sourceRoot":"","sources":["../../../examples/tx.wait.revert.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,OAAO,EAAe,SAAS,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AACtE,OAAO,EAAU,WAAW,EAAE,UAAU,EAAqB,MAAM,QAAQ,CAAC;AAC5E,OAAO,EAAE,MAAM,EAAE,MAAM,gBAAgB,CAAC;AAExC,IAAI,OAAO,GAAI,IAAI,OAAO,EAAE,CAAC;AAC7B,IAAI,MAAc,CAAC;AACnB,IAAI,aAAqB,CAAC;AAC1B,MAAM,WAAW,GAAG,SAAS,CAAC,WAAW,CAAC;AAC1C,IAAI,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;AAE/B,KAAK,UAAU,IAAI;IACf,MAAM,GAAG,MAAM,MAAM,CAAC,SAAS,EAAE,CAAC;IAClC,aAAa,GAAG,MAAM,MAAM,CAAC,UAAU,EAAE,CAAC;IAC1C,MAAM,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;IAGpD,MAAM,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;IAC/C,UAAU;IACV,MAAM,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAC,MAAM,EAAE,UAAU,EAAE,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAC1E,gBAAgB;IAChB,MAAM,QAAQ,GAAG,MAAM,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,aAAa,EAAE,WAAW,CAAC,CAAA;IAC9E,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;IAE/C,WAAW;IACX,mDAAmD;IAEnD,IAAG,CAAC;QACA,sCAAsC;QACtC,MAAM,GAAG,GAAG,MAAM,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAC,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAC,CAAC,CAAC;QAC/E,MAAM,GAAG,GAAG,MAAM,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAC,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAC,CAAC,CAAC;QAE/E,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,IAAI,CAAE,KAAK,EAAE,OAAO,EAAC,EAAE;YAC9C,OAAO,CAAC,GAAG,CAAC,iDAAiD,CAAC,CAAA;YAC9D,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAA;QAEF,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,EAAC,EAAE;YACvC,OAAO,CAAC,GAAG,CAAC,iDAAiD,CAAC,CAAA;YAC9D,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QAC/B,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,KAAK,EAAC,EAAE;YACZ,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;IAEP,CAAC;IAAA,OAAM,KAAK,EAAC,CAAC;QACV,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC1B,CAAC;IAED,MAAM,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;IAE/C,gBAAgB;IAChB,MAAM,QAAQ,GAAG,MAAM,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,aAAa,EAAE,WAAW,CAAC,CAAA;IAC9E,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;AAGnD,CAAC;AAED,IAAI,EAAE,CAAC","sourcesContent":["\nimport { GeniDex, NetworkName, constants, utils } from \"../src/index\";\nimport { ethers, formatEther, parseEther, Signature, Signer } from \"ethers\";\nimport { config } from \"../test/config\";\n\nlet genidex  = new GeniDex();\nlet signer: Signer;\nlet signerAddress: string;\nconst ETH_ADDRESS = constants.ETH_ADDRESS;\nlet provider = config.provider;\n\nasync function main(){\n    signer = await config.getSigner();\n    signerAddress = await signer.getAddress();\n    await genidex.connect(config.networkName, provider);\n\n\n    await provider.send(\"evm_setAutomine\", [true]);\n    // deposit\n    await genidex.balances.depositEth({signer, normAmount: parseEther(\"1\") });\n    // Check balance\n    const balance1 = await genidex.balances.getBalance(signerAddress, ETH_ADDRESS)\n    console.log('Balance1', formatEther(balance1));\n\n    // withdraw\n    // await provider.send(\"evm_setAutomine\", [false]);\n\n    try{\n        // const normAmount = parseEther(\"1\");\n        const tx1 = await genidex.balances.withdrawEth({signer, normAmount: balance1});\n        const tx2 = await genidex.balances.withdrawEth({signer, normAmount: balance1});\n\n        genidex.tx.wait(tx1?.hash).then( async (receipt)=>{\n            console.log('\\n\\n=========== tx1 successful ============\\n\\n')\n            console.log(receipt?.hash);\n        })\n\n        genidex.tx.wait(tx2?.hash).then((receipt)=>{\n            console.log('\\n\\n=========== tx2 successful ============\\n\\n')\n            console.log(receipt?.hash);\n        })\n        .catch((error)=>{\n            utils.logError(error);\n        });\n\n    }catch(error){\n        utils.logError(error);\n    }\n\n    await provider.send(\"evm_setAutomine\", [true]);\n\n    // Check balance\n    const balance2 = await genidex.balances.getBalance(signerAddress, ETH_ADDRESS)\n    console.log('Balance2', formatEther(balance2));\n\n\n}\n\nmain();"]}
{"version":3,"file":"get.orders.ex.js","sourceRoot":"","sources":["../../../examples/get.orders.ex.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,OAAO,EAAsB,MAAM,cAAc,CAAC;AAE3D,OAAO,EAAE,MAAM,EAAE,MAAM,gBAAgB,CAAC;AAGxC,IAAI,OAAO,GAAI,IAAI,OAAO,EAAE,CAAC;AAC7B,IAAI,MAAc,CAAC;AACnB,IAAI,aAAqB,CAAC;AAC1B,IAAI,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;AAE/B,KAAK,UAAU,IAAI;IACf,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAA;IACzB,MAAM,GAAG,MAAM,MAAM,CAAC,SAAS,EAAE,CAAC;IAClC,aAAa,GAAG,MAAM,MAAM,CAAC,UAAU,EAAE,CAAC;IAC1C,MAAM,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;IACpD,MAAM,QAAQ,GAAG,CAAC,CAAC;IAEnB,YAAY;IACZ,OAAO,CAAC,IAAI,EAAE,CAAC;IACf,MAAM,SAAS,GAAG,MAAM,OAAO,CAAC,SAAS,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;IACpE,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;IAC3C,OAAO,CAAC,OAAO,EAAE,CAAA;IAEjB,aAAa;IACb,OAAO,CAAC,IAAI,EAAE,CAAC;IACf,MAAM,UAAU,GAAG,MAAM,OAAO,CAAC,UAAU,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;IACvE,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC;IAC7C,OAAO,CAAC,OAAO,EAAE,CAAA;IAEjB,kBAAkB;IAClB,OAAO,CAAC,IAAI,EAAE,CAAC;IACf,MAAM,eAAe,GAAG,MAAM,OAAO,CAAC,SAAS,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;IAC/E,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,eAAe,CAAC,CAAC;IAChD,OAAO,CAAC,OAAO,EAAE,CAAA;IAEjB,yBAAyB;IACzB,OAAO,CAAC,IAAI,EAAE,CAAC;IACf,MAAM,sBAAsB,GAAG,MAAM,OAAO,CAAC,SAAS,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC;IACxF,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,sBAAsB,CAAC,CAAC;IAC9D,OAAO,CAAC,OAAO,EAAE,CAAA;AAErB,CAAC;AAED,IAAI,EAAE,CAAC","sourcesContent":["\nimport { GeniDex, NetworkName, utils } from \"../src/index\";\nimport { ethers, formatEther, parseEther, Signature, Signer } from \"ethers\";\nimport { config } from \"../test/config\";\nimport { error } from \"console\";\n\nlet genidex  = new GeniDex();\nlet signer: Signer;\nlet signerAddress: string;\nlet provider = config.provider;\n\nasync function main(){\n    console.log('get.orders')\n    signer = await config.getSigner();\n    signerAddress = await signer.getAddress();\n    await genidex.connect(config.networkName, provider);\n    const marketId = 5;\n\n    // buyOrders\n    console.time();\n    const buyOrders = await genidex.buyOrders.getAllBuyOrders(marketId);\n    console.log('buyOrders', buyOrders.length);\n    console.timeEnd()\n\n    // sellOrders\n    console.time();\n    const sellOrders = await genidex.sellOrders.getAllSellOrders(marketId);\n    console.log('sellOrders', sellOrders.length);\n    console.timeEnd()\n\n    // filledBuyOrders\n    console.time();\n    const filledBuyOrders = await genidex.buyOrders.getFilledBuyOrderIds(marketId);\n    console.log('filledBuyOrders', filledBuyOrders);\n    console.timeEnd()\n\n    // randomFilledBuyOrderID\n    console.time();\n    const randomFilledBuyOrderID = await genidex.buyOrders.randomFilledBuyOrderID(marketId);\n    console.log('randomFilledBuyOrderID', randomFilledBuyOrderID);\n    console.timeEnd()\n\n}\n\nmain();"]}
export const rewarderABI = [
  "error AddressEmptyCode(address target)",
  "error ERC1967InvalidImplementation(address implementation)",
  "error ERC1967NonPayable()",
  "error FailedCall()",
  "error InvalidInitialization()",
  "error NotInitializing()",
  "error OwnableInvalidOwner(address owner)",
  "error OwnableUnauthorizedAccount(address account)",
  "error UUPSUnauthorizedCallContext()",
  "error UUPSUnsupportedProxiableUUID(bytes32 slot)",
  "event Claimed(address indexed user, uint256 epoch, uint256 reward, uint256 pointsUsed, uint256 pointsPerGENI)",
  "event Contributed(address indexed from, uint256 amount)",
  "event EpochEnded(uint256 epoch)",
  "event EpochStarted(uint256 epoch, uint256 startTime)",
  "event Initialized(uint64 version)",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "event Upgraded(address indexed implementation)",
  "function BASE_UNIT() view returns (uint256)",
  "function EPOCH_DURATION() view returns (uint256)",
  "function UNLOCK_INTERVAL() view returns (uint256)",
  "function UPGRADE_INTERFACE_VERSION() view returns (string)",
  "function claimReferralReward(uint256 points)",
  "function claimTradingReward(uint256 points)",
  "function contribute(uint256 normAmount)",
  "function currentEpoch() view returns (uint256)",
  "function epochs(uint256) view returns (uint256 startTime, uint256 totalUnlockable, uint256 distributedTokens)",
  "function geniDex() view returns (address)",
  "function geniToken() view returns (address)",
  "function getRewardSystemInfo() view returns (uint256 epoch, uint256 pointsPerGENI, uint256 startTime, uint256 totalUnlockable, uint256 unlockedTokens, uint256 distributedTokens, uint256 availableTokens, uint256 unclaimedPoints, uint256 geniBalance)",
  "function getUserRewardInfo(address user) view returns (uint256 tradingPoints, uint256 refPoints, uint256 estimatedReward, uint256 totalClaimed, uint256 pointsPerGENI)",
  "function initialize(address initialOwner, address _token, address _geniDex)",
  "function owner() view returns (address)",
  "function proxiableUUID() view returns (bytes32)",
  "function referralPoints(address) view returns (uint256)",
  "function renounceOwnership()",
  "function totalClaimedTokens(address) view returns (uint256)",
  "function totalUnclaimedRefPoints() view returns (uint256)",
  "function transferOwnership(address newOwner)",
  "function upgradeToAndCall(address newImplementation, bytes data) payable"
];